from typing import List
def smallest_subarray_sum(nums: List[int], k: int) -> int:
n = len(nums)
min_length = float('inf')
current_sum = 0
start = 0
for end in range(n):
    current_sum += nums[end]
    
    while current_sum >= k:
        min_length = min(min_length, end - start + 1)
        current_sum -= nums[start]
        start += 1

if min_length == float('inf'):
    return -1
else:
    return min_length
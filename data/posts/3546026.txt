 // leetcode question name Evaluate Division
 class Solution {
 public:
  double solve(string start, string end,map<string,int>&vis,map<string,vector<string>>&mp,map<pair<string,string>,double>&values){
   queue<pair<string,double>>q;
   q.push({start,1.00});
   vis[start]=1;

    while(!q.empty()){
        auto f = q.front();
        q.pop();

        // cout<<f.first<<" "<<f.second<<endl;

        for(auto i : mp[f.first]){
            if(vis[i]!=1){
                if(i==end){
                    return f.second*values[{f.first,i}];
                }else{
                    q.push({i,f.second*values[{f.first,i}]});
                    vis[i]=1;
                }
            }
        }
    }
    return -1.0;
}


vector<double> calcEquation(vector<vector<string>>& equations, vector<double>& values, vector<vector<string>>& queries){        
    
    map<string,vector<string>>mp;
    // map<string,int>vis;
    map<pair<string,string>,double>v;
    int k=0;
    for(auto i : equations){
        mp[i[0]].push_back(i[1]);
        mp[i[1]].push_back(i[0]);
        v[{i[0],i[1]}]=values[k];
        v[{i[1],i[0]}]=(1/values[k]);
        k+=1;
    }

    vector<double>ans;
    for(auto i : queries){
        map<string,int>vis;

        if(i[0]==i[1]){
            if(mp.count(i[0])) ans.push_back(1.0);
            else ans.push_back(-1.0);
        }
        else{
            auto a = solve(i[0],i[1],vis,mp,v);
            ans.push_back(a);
        }
    }

    return ans;
}
};